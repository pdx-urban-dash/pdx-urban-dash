// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DonutChart /> snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DonutChart
    className=""
    colorScheme="light"
    data={
      Array [
        Object {
          "description": "first description",
          "name": "first slice",
          "value": 10,
        },
        Object {
          "description": "second description",
          "name": "second slice",
          "value": 10,
        },
        Object {
          "description": "third description",
          "name": "third slice",
          "value": 10,
        },
        Object {
          "description": "fourth description",
          "name": "fourth slice",
          "value": 10,
        },
      ]
    }
    title="title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <a />,
        <Legend
          series={
            Array [
              Object {
                "color": "#82204A",
                "description": "first description",
                "title": "first slice",
              },
              Object {
                "color": "#558C8C",
                "description": "second description",
                "title": "second slice",
              },
              Object {
                "color": "#E8DB7D",
                "description": "third description",
                "title": "third slice",
              },
              Object {
                "color": "#231123",
                "description": "fourth description",
                "title": "fourth slice",
              },
            ]
          }
        />,
      ],
      "className": "",
      "title": "title",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "series": Array [
            Object {
              "color": "#82204A",
              "description": "first description",
              "title": "first slice",
            },
            Object {
              "color": "#558C8C",
              "description": "second description",
              "title": "second slice",
            },
            Object {
              "color": "#E8DB7D",
              "description": "third description",
              "title": "third slice",
            },
            Object {
              "color": "#231123",
              "description": "fourth description",
              "title": "fourth slice",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <a />,
          <Legend
            series={
              Array [
                Object {
                  "color": "#82204A",
                  "description": "first description",
                  "title": "first slice",
                },
                Object {
                  "color": "#558C8C",
                  "description": "second description",
                  "title": "second slice",
                },
                Object {
                  "color": "#E8DB7D",
                  "description": "third description",
                  "title": "third slice",
                },
                Object {
                  "color": "#231123",
                  "description": "fourth description",
                  "title": "fourth slice",
                },
              ]
            }
          />,
        ],
        "className": "",
        "title": "title",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "series": Array [
              Object {
                "color": "#82204A",
                "description": "first description",
                "title": "first slice",
              },
              Object {
                "color": "#558C8C",
                "description": "second description",
                "title": "second slice",
              },
              Object {
                "color": "#E8DB7D",
                "description": "third description",
                "title": "third slice",
              },
              Object {
                "color": "#231123",
                "description": "fourth description",
                "title": "fourth slice",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
